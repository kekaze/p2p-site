@page "/purchaserequest/{purchaseId:int}"
@using P2PSite.Components.Shared
@rendermode InteractiveServer
@inject IHttpClientFactory ClientFactory

@if (purchaseRequest is null)
{
    <p><em>Loading...</em></p>
}
else if (string.IsNullOrEmpty(errorMessage) == false)
{
    <p><em>@errorMessage</em></p>
}
else
{

    <h3 class="py-3">@purchaseRequest.PurchaseId</h3>

    <label for="date_created">Date Create</label>
    <input type="text" value="@purchaseRequest.CreatedAt" name="date_created" disabled />

    <label for="company_id">Company ID</label>
    <input type="text" value="@purchaseRequest.CompanyId" name="company_id" disabled />

    <label for="company_name">Company Name</label>
    <input type="text" value="@purchaseRequest.CompanyName" name="company_name" disabled />

    <label for="pr_type">PR Type</label>
    <input type="text" value="@purchaseRequest.Type" name="pr_type" disabled />

    <label for="pr_status">Status</label>
    <input type="text" value="@purchaseRequest.Status" name="pr_status" disabled />

    <label for="purpose">Purpose</label>
    <textarea type="text" value="@purchaseRequest.Purpose" name="purpose" style="resize: none" disabled></textarea>

    <table class="table">
        <thead>
            <tr>
                <th>Material Code</th>
                <th>Material Name</th>
                <th>Quantity</th>
                <th class="text-center">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var material in purchaseRequest.Materials)
            {
                <tr>
                    <td>@material.MaterialCode</td>
                    <td>@material.MaterialName</td>
                    <td>@material.Quantity</td>
                    <td>
                        <div type="button" class="text-center" @onclick="ShowMaterialModal">
                            <i class="fa-solid fa-bars"></i>
                        </div>
                    </td>
                </tr>

            }
        </tbody>
    </table>

    @if (OpenModal)
    {
        <Modal @ref="CenterModal" />
    }
}

@code {
    [Parameter]
    public int purchaseId { get; set; }

    OnePurchaseRequest? purchaseRequest;
    string? errorMessage;

    public Modal? CenterModal { get; set; }
    public bool OpenModal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("WebAPI");
        try
        {
            purchaseRequest = await client.GetFromJsonAsync<OnePurchaseRequest>($"/api/purchaserequests/{purchaseId}");
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"There was an error getting the purchase requests: {ex.Message}";
        }
    }

    public void ShowMaterialModal()
    {
        OpenModal = true;
    }
}